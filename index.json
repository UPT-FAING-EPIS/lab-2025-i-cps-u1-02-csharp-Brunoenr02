{
  "Cobertura/SummaryGithub.html": {
    "href": "Cobertura/SummaryGithub.html",
    "title": "Summary | Bank App",
    "summary": "Summary Summary Generated on: 09/04/2025 - 08:48:05 a. m. Coverage date: 08/04/2025 - 10:14:19 a. m. - 09/04/2025 - 08:41:09 a. m. Parser: MultiReport (2x Cobertura) Assemblies: 1 Classes: 3 Files: 2 Line coverage: 21.5% (11 of 51) Covered lines: 11 Uncovered lines: 40 Coverable lines: 51 Total lines: 74 Branch coverage: 20% (2 of 10) Covered branches: 2 Total branches: 10 Method coverage: Feature is only available for sponsors Coverage Bank.WebApi - 21.5% Name Line Branch Bank.WebApi 21.5% 20% Bank.WebApi.Models.BankAccount 55% 33.3% Program 0% 0% WeatherForecast 0%"
  },
  "disenio.html": {
    "href": "disenio.html",
    "title": "| Bank App",
    "summary": "classDiagram class BankAccount BankAccount : +String CustomerName BankAccount : +Double Balance BankAccount : +Debit() Void BankAccount : +Credit() Void"
  },
  "docs/Bank.WebApi.Models.BankAccount.html": {
    "href": "docs/Bank.WebApi.Models.BankAccount.html",
    "title": "Class BankAccount | Bank App",
    "summary": "Class BankAccount Namespace Bank.WebApi.Models Assembly Bank.WebApi.dll Representa una cuenta bancaria con operaciones de débito y crédito. public class BankAccount Inheritance object BankAccount Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BankAccount(string, double) Inicializa una nueva instancia de la clase BankAccount. public BankAccount(string customerName, double balance) Parameters customerName string Nombre del cliente. balance double Balance inicial de la cuenta. Properties Balance Obtiene el balance actual de la cuenta. public double Balance { get; } Property Value double CustomerName Obtiene el nombre del cliente. public string CustomerName { get; } Property Value string Methods Credit(double) Acredita una cantidad especificada en la cuenta. public void Credit(double amount) Parameters amount double Cantidad a acreditar. Debit(double) Debita una cantidad especificada de la cuenta. public void Debit(double amount) Parameters amount double Cantidad a debitar."
  },
  "docs/Bank.WebApi.Models.html": {
    "href": "docs/Bank.WebApi.Models.html",
    "title": "Namespace Bank.WebApi.Models | Bank App",
    "summary": "Namespace Bank.WebApi.Models Classes BankAccount Representa una cuenta bancaria con operaciones de débito y crédito."
  },
  "docs/Bank.WebApi.Tests.BankAccountTests.html": {
    "href": "docs/Bank.WebApi.Tests.BankAccountTests.html",
    "title": "Class BankAccountTests | Bank App",
    "summary": "Class BankAccountTests Namespace Bank.WebApi.Tests Assembly Bank.WebApi.Tests.dll public class BankAccountTests Inheritance object BankAccountTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Debit_WithValidAmount_UpdatesBalance() [Test] public void Debit_WithValidAmount_UpdatesBalance()"
  },
  "docs/Bank.WebApi.Tests.html": {
    "href": "docs/Bank.WebApi.Tests.html",
    "title": "Namespace Bank.WebApi.Tests | Bank App",
    "summary": "Namespace Bank.WebApi.Tests Classes BankAccountTests"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Bank App",
    "summary": "This is the HOMEPAGE. Diagrama de Clases Pruebas"
  }
}